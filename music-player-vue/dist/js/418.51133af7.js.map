{"version":3,"file":"js/418.51133af7.js","mappings":"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","sources":["webpack://music-player-vue/./src/views/DiscoveringMusic.vue","webpack://music-player-vue/./src/views/DiscoveringMusic.vue?82c2","webpack://music-player-vue/./node_modules/@vicons/ionicons5/es/PlayCircleOutline.js"],"sourcesContent":["<template>\n    <div class=\"discover-container\">\n        <!-- 轮播图部分 -->\n        <div class=\"banner-section\">\n            <n-carousel autoplay show-arrow>\n                <img class=\"carousel-img\" src=\"https://pic1.imgdb.cn/item/67ba76f3d0e0a243d4025a27.png\" />\n                <img class=\"carousel-img\" src=\"https://pic1.imgdb.cn/item/67ba778cd0e0a243d4025a3f.png\" />\n                <img class=\"carousel-img\" src=\"https://pic1.imgdb.cn/item/67ba77efd0e0a243d4025a8c.png\" />\n            </n-carousel>\n        </div>\n\n        <!-- 推荐歌单部分 -->\n        <div class=\"playlist-section\">\n            <div class=\"section-header\">\n                <h2>推荐歌单</h2>\n                <n-button text type=\"primary\">\n                    更多\n                    <template #icon>\n                        <n-icon><chevron-forward /></n-icon>\n                    </template>\n                </n-button>\n            </div>\n            <n-scrollbar x-scrollable>\n                <div class=\"playlist-grid\">\n                    <n-button\n                        v-for=\"playlist in playlists\"\n                        :key=\"playlist.id\"\n                        class=\"playlist-card\"\n                        text\n                        @click=\"handlePlaylistClick(playlist)\"\n                    >\n                        <img :src=\"playlist.cover\" class=\"playlist-cover\" :alt=\"playlist.name\">\n                        <div class=\"playlist-name\">{{ playlist.name }}</div>\n                    </n-button>\n                </div>\n            </n-scrollbar>\n        </div>\n\n        <!-- 每日推荐部分 -->\n        <div class=\"recommended-songs-section\">\n            <div class=\"section-header\">\n                <h2>每日推荐</h2>\n            </div>\n            <div class=\"table-container\">\n                <n-scrollbar style=\"max-height: 100%;\">\n                    <div class=\"songs-list\">\n                        <div \n                            v-for=\"(song, index) in recommendedSongs\" \n                            :key=\"song.id + index\"\n                            class=\"song-item\"\n                            :class=\"{ 'is-even': index % 2 === 0 }\"\n                            @click=\"handleSongClick(song)\"\n                        >\n                            <div class=\"song-index\">{{ index + 1 }}</div>\n                            <div class=\"song-cover-wrapper\">\n                                <img :src=\"song.cover\" class=\"song-cover\" :alt=\"song.name\">\n                                <div class=\"play-icon\">\n                                    <n-icon size=\"16\">\n                                        <play-circle-outline />\n                                    </n-icon>\n                                </div>\n                            </div>\n                            <div class=\"song-info\">\n                                <span class=\"song-name\">{{ song.name }}</span>\n                                <span class=\"artist\">{{ song.artist }}</span>\n                            </div>\n                            <div class=\"song-duration\">{{ song.duration }}</div>\n                        </div>\n                    </div>\n                </n-scrollbar>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script setup>\nimport { ref, onMounted } from 'vue'\nimport { useRouter } from 'vue-router'\nimport { NCarousel, NButton, NIcon, NImage, NScrollbar } from 'naive-ui'\nimport { ChevronForward as chevronForward, PlayCircleOutline } from '@vicons/ionicons5'\n\nconst router = useRouter()\n\nconst playlists = ref([\n    {\n        id: '2619366284',\n        cover: 'https://pic1.imgdb.cn/item/67ba76f3d0e0a243d4025a27.png',\n        name: '私人雷达 | 为你推荐的每日好歌'\n    },\n    {\n        id: '3778678',\n        cover: 'https://pic1.imgdb.cn/item/67ba778cd0e0a243d4025a3f.png',\n        name: '热歌榜 | 最新流行音乐'\n    },\n    {\n        id: '3779629',\n        cover: 'https://pic1.imgdb.cn/item/67ba77efd0e0a243d4025a8c.png',\n        name: '新歌榜 | 新歌一网打尽'\n    },\n    {\n        id: '5059642708',\n        cover: 'https://pic1.imgdb.cn/item/67ba80ced0e0a243d4025afc.png',\n        name: '怀旧经典 | 永恒的音乐记忆'\n    },\n    {\n        id: '2809513713',\n        cover: 'https://pic1.imgdb.cn/item/67ba80f2d0e0a243d4025b00.png',\n        name: '欧美精选 | 精选欧美热门歌曲'\n    }\n])\n\nconst recommendedSongs = ref([])\n\n// 获取推荐歌曲\nconst fetchRecommendedSongs = async () => {\n  try {\n    // 使用ID 3778678 (热歌榜) 作为推荐歌曲来源\n    const response = await fetch('https://api.qijieya.cn/meting/?type=playlist&id=3778678');\n    const data = await response.json();\n    \n    if (data && Array.isArray(data)) {\n      // 只取前12首歌\n      const songs = data.slice(0, 12).map(song => ({\n        id: song.id,\n        cover: song.pic,\n        name: song.title,\n        artist: song.author,\n        duration: formatDuration(song.time || 0),\n        url: song.url,\n        lrc: song.lrc\n      }));\n      \n      recommendedSongs.value = songs;\n    }\n  } catch (error) {\n    console.error('获取推荐歌曲失败:', error);\n    // 保留默认数据作为备用\n  }\n}\n\n// 格式化时长\nconst formatDuration = (seconds) => {\n  const minutes = Math.floor(seconds / 60);\n  const secs = Math.floor(seconds % 60);\n  return `${minutes}:${secs.toString().padStart(2, '0')}`;\n}\n\nconst handlePlaylistClick = (playlist) => {\n    router.push({\n        name: 'PlaylistDetail',\n        params: { id: playlist.id }\n    })\n}\n\nconst handleSongClick = (song) => {\n    // 直接播放歌曲并跳转到详情页\n    const djTableId = 'discover_player';\n    \n    // 确保使用最新的封面\n    fetch(`https://api.qijieya.cn/meting/?type=song&id=${song.id}`)\n      .then(response => response.json())\n      .then(songData => {\n        if (songData && songData.pic) {\n          // 使用获取到的新封面\n          playSongWithCover(song, djTableId, songData.pic);\n        } else {\n          // 使用原有封面\n          playSongWithCover(song, djTableId, song.cover);\n        }\n      })\n      .catch(error => {\n        console.error('获取歌曲信息失败:', error);\n        playSongWithCover(song, djTableId, song.cover);\n      });\n}\n\n// 使用指定封面播放歌曲\nconst playSongWithCover = (song, djTableId, coverUrl) => {\n    // 播放音乐\n    fetch(`https://${GetParentResourceName()}/playMusic`, {\n        method: \"POST\",\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n            url: song.url || `https://api.qijieya.cn/meting/?type=url&id=${song.id}`,\n            name: song.name,\n            artist: song.artist,\n            album: '',\n            avatar: coverUrl,\n            djTableId: djTableId,\n            volume: 100,\n            duration: durationToSeconds(song.duration)\n        })\n    }).then(response => {\n        if (!response.ok) {\n            console.error('Failed to play music:', response.statusText);\n        } else {\n            // 跳转到歌曲详情页\n            router.push(`/song/${song.id}`);\n}\n    }).catch(error => {\n        console.error('Error playing music:', error);\n    });\n}\n\n// 将时间格式转换为秒数\nconst durationToSeconds = (duration) => {\n    const [minutes, seconds] = duration.split(':').map(Number);\n    return minutes * 60 + seconds;\n}\n\n// 组件挂载时获取推荐歌曲\nonMounted(() => {\n    fetchRecommendedSongs();\n})\n</script>\n\n<style scoped>\n.discover-container {\n    height: 100vh;\n    padding: 12px 20px 80px;\n    display: flex;\n    flex-direction: column;\n    gap: 12px;\n    overflow: hidden;\n    box-sizing: border-box;\n}\n\n.banner-section {\n    flex-shrink: 0;\n    height: 100px;\n    border-radius: 8px;\n    overflow: hidden;\n    margin-bottom: 4px;\n}\n\n.playlist-section {\n    flex-shrink: 0;\n    margin-bottom: 4px;\n    overflow: hidden;\n}\n\n.section-header {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 12px;\n    padding: 0 4px;\n}\n\n.section-header h2 {\n    font-size: 20px;\n    color: #fff;\n    margin: 0;\n}\n\n/* 推荐歌单样式 */\n.playlist-grid {\n    display: flex;\n    gap: 12px;\n    padding: 4px;\n    min-width: min-content;\n}\n\n.playlist-card {\n    flex: 0 0 160px;\n    width: 160px;\n    padding: 0;\n    background: transparent;\n    border: none;\n    transition: transform 0.2s;\n}\n\n.playlist-card:hover {\n    transform: scale(1.02);\n}\n\n.playlist-card:hover .playlist-name {\n    color: var(--primary-color);\n}\n\n.playlist-cover {\n    width: 160px;\n    height: 160px;\n    border-radius: 8px;\n    margin-bottom: 8px;\n    object-fit: cover;\n}\n\n.playlist-name {\n    font-size: 14px;\n    color: #fff;\n    margin: 4px 0;\n    line-height: 1.3;\n    overflow: hidden;\n    text-overflow: ellipsis;\n    display: -webkit-box;\n    -webkit-line-clamp: 2;\n    -webkit-box-orient: vertical;\n    height: 36px;\n    text-align: left;\n    transition: color 0.2s;\n}\n\n/* 每日推荐部分 */\n.recommended-songs-section {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    min-height: 0;\n    overflow: hidden;\n}\n\n.table-container {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    border-radius: 8px;\n    background: rgba(28, 28, 28, 0.8);\n    backdrop-filter: blur(10px);\n    overflow: hidden;\n}\n\n.songs-list {\n    padding: 8px;\n}\n\n.song-item {\n    display: flex;\n    align-items: center;\n    padding: 8px 12px;\n    border-radius: 4px;\n    cursor: pointer;\n    transition: all 0.2s;\n    min-height: 56px;\n    box-sizing: border-box;\n    margin-bottom: 2px;\n}\n\n.song-item:hover {\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.song-item.is-even {\n    background: rgba(255, 255, 255, 0.02);\n}\n\n.song-item:hover .play-icon {\n    opacity: 1;\n}\n\n.song-index {\n    width: 30px;\n    color: #999;\n    font-size: 14px;\n    text-align: center;\n}\n\n.song-cover-wrapper {\n    width: 40px;\n    height: 40px;\n    position: relative;\n    margin-right: 12px;\n    border-radius: 4px;\n    overflow: hidden;\n}\n\n.song-cover {\n    width: 100%;\n    height: 100%;\n    object-fit: cover;\n}\n\n.play-icon {\n    position: absolute;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: rgba(0, 0, 0, 0.5);\n    opacity: 0;\n    transition: opacity 0.2s;\n    color: #fff;\n}\n\n.song-info {\n    flex: 1;\n    display: flex;\n    flex-direction: column;\n    gap: 4px;\n    min-width: 0;\n}\n\n.song-name {\n    font-size: 14px;\n    color: #fff;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.artist {\n    font-size: 12px;\n    color: #999;\n    white-space: nowrap;\n    overflow: hidden;\n    text-overflow: ellipsis;\n}\n\n.song-duration {\n    width: 80px;\n    text-align: right;\n    color: #999;\n    font-size: 12px;\n    padding-right: 12px;\n}\n\n/* 滚动条样式 */\n:deep(.n-scrollbar) {\n    height: 100%;\n}\n\n:deep(.n-scrollbar-container) {\n    height: 100%;\n}\n\n:deep(.n-scrollbar-content) {\n    padding-right: 12px;\n}\n\n:deep(.n-scrollbar-rail.n-scrollbar-rail--vertical) {\n    right: 4px !important;\n    top: 4px !important;\n    bottom: 4px !important;\n    width: 6px !important;\n    background-color: rgba(255, 255, 255, 0.1) !important;\n}\n\n:deep(.n-scrollbar-rail__scrollbar) {\n    background-color: rgba(255, 255, 255, 0.3) !important;\n}\n\n:deep(.n-scrollbar-rail__scrollbar:hover) {\n    background-color: rgba(255, 255, 255, 0.5) !important;\n}\n</style>\n","import script from \"./DiscoveringMusic.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./DiscoveringMusic.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./DiscoveringMusic.vue?vue&type=style&index=0&id=16437309&scoped=true&lang=css\"\n\nimport exportComponent from \"../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-16437309\"]])\n\nexport default __exports__","import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, defineComponent } from 'vue'\nconst _hoisted_1 = {\n  xmlns: 'http://www.w3.org/2000/svg',\n  'xmlns:xlink': 'http://www.w3.org/1999/xlink',\n  viewBox: '0 0 512 512'\n}\nexport default defineComponent({\n  name: 'PlayCircleOutline',\n  render: function render(_ctx, _cache) {\n    return (\n      _openBlock(),\n      _createElementBlock(\n        'svg',\n        _hoisted_1,\n        _cache[0] ||\n          (_cache[0] = [\n            _createElementVNode(\n              'path',\n              {\n                d: 'M448 256c0-106-86-192-192-192S64 150 64 256s86 192 192 192s192-86 192-192z',\n                fill: 'none',\n                stroke: 'currentColor',\n                'stroke-miterlimit': '10',\n                'stroke-width': '32'\n              },\n              null,\n              -1 /* HOISTED */\n            ),\n            _createElementVNode(\n              'path',\n              {\n                d: 'M216.32 334.44l114.45-69.14a10.89 10.89 0 0 0 0-18.6l-114.45-69.14a10.78 10.78 0 0 0-16.32 9.31v138.26a10.78 10.78 0 0 0 16.32 9.31z',\n                fill: 'currentColor'\n              },\n              null,\n              -1 /* HOISTED */\n            )\n          ])\n      )\n    )\n  }\n})\n"],"names":["router","useRouter","playlists","ref","id","cover","name","recommendedSongs","fetchRecommendedSongs","async","response","fetch","data","json","Array","isArray","songs","slice","map","song","pic","title","artist","author","duration","formatDuration","time","url","lrc","value","error","console","seconds","minutes","Math","floor","secs","toString","padStart","handlePlaylistClick","playlist","push","params","handleSongClick","djTableId","then","songData","playSongWithCover","catch","coverUrl","GetParentResourceName","method","headers","body","JSON","stringify","album","avatar","volume","durationToSeconds","ok","statusText","split","Number","onMounted","__exports__","_hoisted_1","xmlns","viewBox","defineComponent","render","_ctx","_cache","_openBlock","_createElementBlock","_createElementVNode","d","fill","stroke"],"sourceRoot":""}